// Generated by Dagger (https://google.github.io/dagger).
package com.app.delivery.injection;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import retrofit2.Retrofit;

public final class NetworkModule_ProvideRetrofitInterface$app_productionDebugFactory
    implements Factory<Retrofit> {
  private static final NetworkModule_ProvideRetrofitInterface$app_productionDebugFactory INSTANCE =
      new NetworkModule_ProvideRetrofitInterface$app_productionDebugFactory();

  @Override
  public Retrofit get() {
    return provideInstance();
  }

  public static Retrofit provideInstance() {
    return proxyProvideRetrofitInterface$app_productionDebug();
  }

  public static NetworkModule_ProvideRetrofitInterface$app_productionDebugFactory create() {
    return INSTANCE;
  }

  public static Retrofit proxyProvideRetrofitInterface$app_productionDebug() {
    return Preconditions.checkNotNull(
        NetworkModule.provideRetrofitInterface$app_productionDebug(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
